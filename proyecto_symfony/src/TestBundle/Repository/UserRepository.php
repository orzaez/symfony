<?php

namespace TestBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository{
    public function getTasksTable($params, $form_filters, $user) {
        $em = $this->getEntityManager();
        //Array con las columnas para la ordenaciÃ³n
        $columns = [
            0 => "id",
            1 => "name",
            2 => "Description",
            3 => 'Username',
            4 => 'Created',
            5 => 'Updated',
            6 => 'Actions',

        ];

        $qr = $em->getConnection();
        $where = $sqlTot = $sqlRec = "";
        
        $sql = "SELECT 
        t.id as id,
        t.name as title,
        t.description as description,
        IF(t.status = 0, 'Finalizada', 'En curso') AS status,
        t.created_at as created_at,
        t.updated_at as updated_at,
        CONCAT(u.first_name, ' ' , u.last_name) AS username
        FROM
        user AS u
        RIGHT JOIN tasks AS t ON t.user_id = u.id";

        //Creamos una query para el total y otra para los datos filtrados
        $sqlTot .= $sql;
        $sqlRec .= $sql;

        //Ejecutamos las consultas
        $queryTot = $this->getEntityManager()->getConnection()->executeQuery($sqlTot)->rowCount();
        $queryRecordsTot = $this->getEntityManager()->getConnection()->executeQuery($sqlTot)->rowCount();
        $queryRecords = $this->getEntityManager()->getConnection()->executeQuery($sqlRec)->fetchAll(\PDO::FETCH_ASSOC);
        $data = $queryRecords;

        //Montamos la respuesta
        $json_data = array(
            "draw" => intval($params['draw']),
            "recordsTotal" => intval($queryTot),
            "recordsFiltered" => intval($queryRecordsTot),
            "data" => $data
        );

        return $json_data;
    }
}
